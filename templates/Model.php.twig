<?php
declare(strict_types=1);

namespace {{ namespace }}Model\Type;

{% if manuals %}
    use Brotkrueml\Schema\Attributes\Manual;
    use Brotkrueml\Schema\Manual\Publisher;
{% endif %}
use Brotkrueml\Schema\Attributes\Type;
use Brotkrueml\Schema\Core\Model\AbstractType;
{% if isWebPageType %}
    use Brotkrueml\Schema\Core\Model\WebPageTypeInterface;
{% endif %}

/**
 * {{ type.comment.text|raw }}
{% if type.isEnumeration %}
    * @deprecated This type represents an enumeration, use the specific {{ type.id.label|raw }} enum instead.
{% endif %}
 */
#[Type('{{ type.id.label|raw }}')]
{% for manual in manuals %}
    #[Manual(Publisher::{{ manual.publisher.name|raw }}, '{{ manual.text|raw }}', '{{ manual.link|raw }}')]
{% endfor %}
final class {{ className }} extends AbstractType
{% if isWebPageType %}
    implements WebPageTypeInterface
{% endif %}
{
    protected static array $propertyNames = [
        {% for property in properties %}
            '{{ property.id.label }}',
        {% endfor %}
    ];
}
